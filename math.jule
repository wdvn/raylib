use "std/math"

static PI:f32=3.14159265358979323846
static EPSILON:f32=0.000001
static DEG2RAD:f32= PI/180
static RAD2DEG:f32= 180/PI

//MatrixToFloat

//Vector3ToFloat

//Vector2Zero
fn  Vector2Zero():Vector2{
    ret Vector2{x:0,y:0}
}
//Vector2One
fn Vector2One():Vector2{
    ret Vector2{1,1}
}

//Vector2Add
fn  Vector2Add(v1:Vector2,v2:Vector2): Vector2{
    ret Vector2{v1.x+v2.x,v1.y+v2.y}
}

//Vector2AddValue
fn Vector2AddValue(v1: Vector2, add: f32):Vector2{
    ret Vector2{v1.x+add,v1.y+add}
}

//Vector2Subtract
fn  Vector2Subtract(v1:Vector2,v2:Vector2): Vector2{
    ret Vector2{v1.x-v2.x,v1.y-v2.y}
}

//Vector2SubtractValue
fn Vector2SubtractValue(v1: Vector2, add: f32):Vector2{
    ret Vector2{v1.x-add,v1.y-add}
}

//Vector2Length
fn  Vector2Length(v:Vector2):f32{
    ret f32(math::Sqrt(f64(v.x*v.x+v.y*v.y)))
}

//Vector3Add
fn  Vector3Add(v1: Vector3, v2: Vector3):Vector3{
    ret Vector3{x:v1.x+v2.x,y:v1.y+v2.y,z:v1.z+v2.z}
}